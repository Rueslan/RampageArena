var commonIssuesData='{"baselineAvailable":"True","baselineDesc":"Baseline is same code base snapshot.","rules":[{"id":"ND1000","name":"Avoid types too big","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query2071458910"},{"id":"ND1001","name":"Avoid types with too many methods","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query1588423785"},{"id":"ND1003","name":"Avoid methods too big, too complex","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query2368539037"},{"id":"ND1004","name":"Avoid methods with too many parameters","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query1685837031"},{"id":"ND1005","name":"Avoid methods with too many overloads","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query3814626502"},{"id":"ND1006","name":"Avoid methods potentially poorly commented","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query4051380568"},{"id":"ND1007","name":"Avoid types with poor cohesion","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query2871226987"},{"id":"ND1200","name":"Avoid interfaces too big","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query1702099707"},{"id":"ND1201","name":"Base class should not use derivatives","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query2611900747"},{"id":"ND1202","name":"Class shouldn\'t be too deep in inheritance tree","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query585191978"},{"id":"ND1203","name":"Class with no descendant should be sealed if possible","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query2132437556"},{"id":"ND1206","name":"A stateless class or structure might be turned into a static type","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query3283078776"},{"id":"ND1207","name":"Non-static classes should be instantiated or turned to static","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query818888869"},{"id":"ND1208","name":"Methods should be declared static if possible","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query46159255"},{"id":"ND1211","name":"Don\'t assign static fields from instance methods","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query4233398515"},{"id":"ND1212","name":"Avoid empty interfaces","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query151566768"},{"id":"ND1300","name":"Avoid custom delegates","cat":"Design","url":"../../NDependReport.html?e=1#Query2822976329"},{"id":"ND1305","name":"Avoid namespaces with few types","cat":"Design","url":"../../NDependReport.html?e=1#Query3431837327"},{"id":"ND1306","name":"Nested types should not be visible","cat":"Design","url":"../../NDependReport.html?e=1#Query442335452"},{"id":"ND1307","name":"Declare types in namespaces","cat":"Design","url":"../../NDependReport.html?e=1#Query1748245689"},{"id":"ND1310","name":"Attribute classes should be sealed","cat":"Design","url":"../../NDependReport.html?e=1#Query1402225742"},{"id":"ND1311","name":"Don\'t use obsolete types, methods or fields","cat":"Design","url":"../../NDependReport.html?e=1#Query1809180291"},{"id":"ND1312","name":"Do implement methods that throw NotImplementedException","cat":"Design","url":"../../NDependReport.html?e=1#Query187080949"},{"id":"ND1313","name":"Override equals and operator equals on value types","cat":"Design","url":"../../NDependReport.html?e=1#Query2569341786"},{"id":"ND1400","name":"Avoid namespaces mutually dependent","cat":"Architecture","url":"../../NDependReport.html?e=1#Query1653453125"},{"id":"ND1401","name":"Avoid namespaces dependency cycles","cat":"Architecture","url":"../../NDependReport.html?e=1#Query628377565"},{"id":"ND1405","name":"Assemblies with poor cohesion (RelationalCohesion)","cat":"Architecture","url":"../../NDependReport.html?e=1#Query2589464663"},{"id":"ND1700","name":"Potentially Dead Types","cat":"Dead Code","url":"../../NDependReport.html?e=1#Query3912344400"},{"id":"ND1701","name":"Potentially Dead Methods","cat":"Dead Code","url":"../../NDependReport.html?e=1#Query1236384003"},{"id":"ND1702","name":"Potentially Dead Fields","cat":"Dead Code","url":"../../NDependReport.html?e=1#Query828230298"},{"id":"ND3101","name":"Don\'t use System.Random for security purposes","cat":"Security","url":"../../NDependReport.html?e=1#Query3492615079"},{"id":"ND1800","name":"Methods that could have a lower visibility","cat":"Visibility","url":"../../NDependReport.html?e=1#Query3956120347"},{"id":"ND1801","name":"Types that could have a lower visibility","cat":"Visibility","url":"../../NDependReport.html?e=1#Query1851038856"},{"id":"ND1802","name":"Fields that could have a lower visibility","cat":"Visibility","url":"../../NDependReport.html?e=1#Query665364738"},{"id":"ND1803","name":"Types that could be declared as private, nested in a parent type","cat":"Visibility","url":"../../NDependReport.html?e=1#Query4257738350"},{"id":"ND1804","name":"Avoid publicly visible constant fields","cat":"Visibility","url":"../../NDependReport.html?e=1#Query456168778"},{"id":"ND1806","name":"Constructors of abstract classes should be declared as protected or private","cat":"Visibility","url":"../../NDependReport.html?e=1#Query4289619194"},{"id":"ND1807","name":"Avoid public methods not publicly visible","cat":"Visibility","url":"../../NDependReport.html?e=1#Query2977263888"},{"id":"ND1900","name":"Fields should be marked as ReadOnly when possible","cat":"Immutability","url":"../../NDependReport.html?e=1#Query2144868306"},{"id":"ND1901","name":"Avoid non-readonly static fields","cat":"Immutability","url":"../../NDependReport.html?e=1#Query1757686740"},{"id":"ND1902","name":"Avoid static fields with a mutable field type","cat":"Immutability","url":"../../NDependReport.html?e=1#Query4019283338"},{"id":"ND1903","name":"Structures should be immutable","cat":"Immutability","url":"../../NDependReport.html?e=1#Query2727642282"},{"id":"ND1914","name":"Immutable struct should be declared as readonly","cat":"Immutability","url":"../../NDependReport.html?e=1#Query4169294673"},{"id":"ND1905","name":"A field must not be assigned from outside its parent hierarchy types","cat":"Immutability","url":"../../NDependReport.html?e=1#Query567343204"},{"id":"ND1906","name":"Don\'t assign a field from many methods","cat":"Immutability","url":"../../NDependReport.html?e=1#Query1975613094"},{"id":"ND1907","name":"Do not declare read only fields with mutable reference types","cat":"Immutability","url":"../../NDependReport.html?e=1#Query2345449560"},{"id":"ND2000","name":"Instance fields naming convention","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1161431673"},{"id":"ND2001","name":"Static fields naming convention","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1160401199"},{"id":"ND2003","name":"Abstract base class should be suffixed with \'Base\'","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3500616363"},{"id":"ND2006","name":"Types name should begin with an Upper character","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1800655636"},{"id":"ND2007","name":"Methods name should begin with an Upper character","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query445447623"},{"id":"ND2009","name":"Avoid types with name too long","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query875021017"},{"id":"ND2010","name":"Avoid methods with name too long","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query399742796"},{"id":"ND2011","name":"Avoid fields with name too long","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query2570016224"},{"id":"ND2012","name":"Avoid having different types with same name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1043522630"},{"id":"ND2013","name":"Avoid prefixing type name with parent namespace name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3170948257"},{"id":"ND2014","name":"Avoid naming types and namespaces with the same identifier","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3676512747"},{"id":"ND2016","name":"Methods prefixed with \'Try\' should return a boolean","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1300267453"},{"id":"ND2017","name":"Properties and fields that represent a collection of items should be named Items.","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query2015295261"},{"id":"ND2020","name":"Avoid various capitalizations for method name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query2904491536"},{"id":"ND2022","name":"Nested class members should not mask outer class\' static members","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query2976418339"},{"id":"ND2102","name":"Avoid defining multiple types in a source file","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query3680765393"},{"id":"ND2103","name":"Namespace name should correspond to file location","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query754292209"},{"id":"ND2104","name":"Types with source files stored in the same directory, should be declared in the same namespace","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query3089515900"},{"id":"ND2105","name":"Types declared in the same namespace, should have their source files stored in the same directory","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query954528203"},{"id":"ND2207","name":"Do not raise too general exception types","cat":"System","url":"../../NDependReport.html?e=1#Query3578711362"},{"id":"ND2300","name":"Collection properties should be read only","cat":"System.Collections","url":"../../NDependReport.html?e=1#Query54113441"},{"id":"ND2700","name":"Float and Date Parsing must be culture aware","cat":"System.Globalization","url":"../../NDependReport.html?e=1#Query3992523250"},{"id":"ND3200","name":"Classes tagged with InitializeOnLoad should have a static constructor","cat":"Unity","url":"../../NDependReport.html?e=1#Query1706587182"},{"id":"ND3201","name":"Avoid using non-generic GetComponent","cat":"Unity","url":"../../NDependReport.html?e=1#Query4141671137"},{"id":"ND3202","name":"Avoid empty Unity message","cat":"Unity","url":"../../NDependReport.html?e=1#Query1955010475"},{"id":"ND3204","name":"Use CreateInstance to create a scriptable object","cat":"Unity","url":"../../NDependReport.html?e=1#Query2160896528"},{"id":"ND3207","name":"Prefer using SetPixels32() over SetPixels()","cat":"Unity","url":"../../NDependReport.html?e=1#Query2611256692"}]}'